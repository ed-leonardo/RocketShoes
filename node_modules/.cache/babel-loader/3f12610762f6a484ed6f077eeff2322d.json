{"ast":null,"code":"import _defineProperty from \"/home/atomic/Bootcamp/MODULO007/rocketshoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/atomic/Bootcamp/MODULO007/rocketshoes/src/pages/Home/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport api from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { bindActionCreators } from 'redux';\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: []\n    };\n\n    this.handleAddProduct = id => {\n      const addToCartRequest = this.props.addToCartRequest;\n      addToCartRequest(id);\n    };\n  }\n\n  async componentDidMount() {\n    const response = await api.get('/products');\n    const data = response.data.map(product => _objectSpread({}, product, {\n      priceFormatted: formatPrice(product.price)\n    }));\n    this.setState({\n      products: data\n    });\n  }\n\n  render() {\n    const products = this.state.products;\n    const amount = this.props.amount;\n    return React.createElement(ProductList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, products.map(product => React.createElement(\"li\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: product.image,\n      alt: product.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, product.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, product.priceFormatted), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleAddProduct(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(MdAddShoppingCart, {\n      size: 16,\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), ' ', amount[product.id] || 0), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"ADICIONAR AO CARRINHO\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {})\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/atomic/Bootcamp/MODULO007/rocketshoes/src/pages/Home/index.js"],"names":["React","Component","connect","MdAddShoppingCart","api","formatPrice","CartActions","bindActionCreators","ProductList","Home","state","products","handleAddProduct","id","addToCartRequest","props","componentDidMount","response","get","data","map","product","priceFormatted","price","setState","render","amount","image","title","mapStateToProps","cart","reduce","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { MdAddShoppingCart } from 'react-icons/md'\nimport api from '../../services/api'\nimport { formatPrice } from '../../util/format'\nimport * as CartActions from '../../store/modules/cart/actions'\nimport { bindActionCreators } from 'redux'\n\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n  state = {\n    products: [],\n  };\n\n  async componentDidMount() {\n    const response = await api.get('/products');\n\n    const data = response.data.map(product => ({\n      ...product,\n      priceFormatted: formatPrice(product.price),\n    }));\n    this.setState({ products: data })\n  }\n\n  handleAddProduct = id => {\n    const { addToCartRequest } = this.props;\n\n    addToCartRequest(id);\n  };\n\n  render() {\n    const { products } = this.state;\n    const { amount } = this.props;\n\n    return (\n      <ProductList>\n        {products.map(product => (\n          <li key={product.id}>\n            <img src={product.image}\n              alt={product.title}></img>\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n            <button type=\"button\"\n              onClick={() => this.handleAddProduct(product.id)}>\n              <div>\n                <MdAddShoppingCart size={16} color=\"#FFF\" />{' '}\n                {amount[product.id] || 0}\n              </div>\n              <span>ADICIONAR AO CARRINHO</span>\n            </button>\n          </li>\n        ))}\n      </ProductList>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {})\n\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n"]},"metadata":{},"sourceType":"module"}