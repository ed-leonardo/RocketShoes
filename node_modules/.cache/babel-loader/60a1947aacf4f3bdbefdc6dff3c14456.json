{"ast":null,"code":"import produce from 'immer';\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case 'ADD_TO_CART_SUCCESS':\n      return produce(state, draft => {\n        const product = action.product;\n        draft.push(product);\n      });\n\n    case 'REMOVE_FROM_CART':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    case 'UPDATE_AMOUNT_SUCCESS':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft[productIndex].amount = Number(action.amount);\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/atomic/Bootcamp/MODULO007/rocketshoes/src/store/modules/cart/reducer.js"],"names":["produce","cart","state","action","type","draft","product","push","productIndex","findIndex","p","id","splice","amount","Number"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAG,EAAtB,EAA0BC,MAA1B,EAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAOJ,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAAA,cACrBC,OADqB,GACTH,MADS,CACrBG,OADqB;AAG7BD,QAAAA,KAAK,CAACE,IAAN,CAAWD,OAAX;AAED,OALa,CAAd;;AAMF,SAAK,kBAAL;AACE,aAAON,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC7B,cAAMG,YAAY,GAAGH,KAAK,CAACI,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACQ,EAArC,CAArB;;AACA,YAAIH,YAAY,IAAI,CAApB,EAAuB;AACrBH,UAAAA,KAAK,CAACO,MAAN,CAAaJ,YAAb,EAA2B,CAA3B;AACD;AACF,OALa,CAAd;;AAMF,SAAK,uBAAL;AACE,aAAOR,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC7B,cAAMG,YAAY,GAAGH,KAAK,CAACI,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACQ,EAArC,CAArB;;AACA,YAAIH,YAAY,IAAI,CAApB,EAAuB;AACrBH,UAAAA,KAAK,CAACG,YAAD,CAAL,CAAoBK,MAApB,GAA6BC,MAAM,CAACX,MAAM,CAACU,MAAR,CAAnC;AACD;AACF,OALa,CAAd;;AAMF;AACE,aAAOX,KAAP;AAvBJ;AAyBD;AAAA","sourcesContent":["import produce from 'immer'\n\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case 'ADD_TO_CART_SUCCESS':\n      return produce(state, draft => {\n        const { product } = action;\n\n        draft.push(product)\n\n      });\n    case 'REMOVE_FROM_CART':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n    case 'UPDATE_AMOUNT_SUCCESS':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n        if (productIndex >= 0) {\n          draft[productIndex].amount = Number(action.amount);\n        }\n      })\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}